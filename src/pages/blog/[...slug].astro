---
import { getCollection } from 'astro:content';
import BlogLayout from '../../layouts/BlogLayout.astro';
import type { CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

type Props = CollectionEntry<'blog'>;

const post = Astro.props as Props;
const { Content } = await post.render();
---

<BlogLayout 
  title={post.data.title}
  description={post.data.description}
  pubDate={post.data.pubDate}
  author={post.data.author}
  image={post.data.image}
  tags={post.data.tags}
>
  <!-- Main container with responsive spacing - same as index.astro -->
  <section class="max-w-[65ch] 
                 mx-1 sm:mx-auto 
                 px-4 sm:px-8 
                 py-8 sm:py-12 lg:py-16">
    
    <!-- Blog post container with prose styling -->
    <article class="prose">
      
      <!-- Blog post header -->
      <header class="mb-8 sm:mb-12">
        <h1 class="text-2xl sm:text-3xl lg:text-4xl 
                 font-bold 
                 text-gray-900 
                 mb-4"
            transition:name={`title-${post.data.title}`}>
          {post.data.title}
        </h1>
        
        <div class="text-sm sm:text-base 
                  text-gray-600 
                  mb-4">
          <time datetime={post.data.pubDate.toISOString()}>
            {post.data.pubDate.toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            })}
          </time>
          {post.data.author && <span> â€¢ by {post.data.author}</span>}
        </div>
        
        {post.data.tags && post.data.tags.length > 0 && (
          <div class="flex flex-wrap 
                    gap-2">
            {post.data.tags.map((tag: string) => (
              <span class="px-2 py-1 
                         text-xs sm:text-sm 
                         bg-gray-100 
                         text-gray-700 
                         rounded">
                {tag}
              </span>
            ))}
          </div>
        )}
      </header>
      
      <!-- Blog post content -->
      <div transition:name="content">
        <Content />
      </div>
    </article>
  </section>
</BlogLayout>
